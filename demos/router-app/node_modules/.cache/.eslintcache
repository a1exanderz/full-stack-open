[{"/Users/alex/full-stack-open/demos/router-app/src/index.js":"1","/Users/alex/full-stack-open/demos/router-app/src/App.js":"2"},{"size":3818,"mtime":1670572377633,"results":"3","hashOfConfig":"4"},{"size":20,"mtime":1670572365934,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"9"},"5gxf6k",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alex/full-stack-open/demos/router-app/src/index.js",["13","14"],[],"import ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  Navigate,\n  useParams,\n  useNavigate,\n  useMatch,\n} from \"react-router-dom\";\n\nconst Home = () => (\n  <div>\n    <h2>TKTL notes app</h2>\n    <p>\n      Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n      Lorem Ipsum has been the industry's standard dummy text ever since the\n      1500s, when an unknown printer took a galley of type and scrambled it to\n      make a type specimen book. It has survived not only five centuries, but\n      also the leap into electronic typesetting, remaining essentially\n      unchanged. It was popularised in the 1960s with the release of Letraset\n      sheets containing Lorem Ipsum passages, and more recently with desktop\n      publishing software like Aldus PageMaker including versions of Lorem\n      Ipsum.\n    </p>\n  </div>\n);\n\nconst Note = ({ note }) => {\n  return (\n    <div>\n      <h2>{note.content}</h2>\n      <div>{note.user}</div>\n      <div>\n        <strong>{note.important ? \"important\" : \"\"}</strong>\n      </div>\n    </div>\n  );\n};\n\nconst Notes = ({ notes }) => (\n  <div>\n    <h2>Notes</h2>\n    <ul>\n      {notes.map((note) => (\n        <li key={note.id}>\n          <Link to={`/notes/${note.id}`}>{note.content}</Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nconst Users = () => (\n  <div>\n    <h2>TKTL notes app</h2>\n    <ul>\n      <li>Matti Luukkainen</li>\n      <li>Juha Tauriainen</li>\n      <li>Arto Hellas</li>\n    </ul>\n  </div>\n);\n\nconst Login = (props) => {\n  const navigate = useNavigate();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    props.onLogin(\"mluukkai\");\n    navigate(\"/\");\n  };\n\n  return (\n    <div>\n      <h2>login</h2>\n      <form onSubmit={onSubmit}>\n        <div>\n          username: <input />\n        </div>\n        <div>\n          password: <input type=\"password\" />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      id: 1,\n      content: \"HTML is easy\",\n      important: true,\n      user: \"Matti Luukkainen\",\n    },\n    {\n      id: 2,\n      content: \"Browser can execute only JavaScript\",\n      important: false,\n      user: \"Matti Luukkainen\",\n    },\n    {\n      id: 3,\n      content: \"Most important methods of HTTP-protocol are GET and POST\",\n      important: true,\n      user: \"Arto Hellas\",\n    },\n  ]);\n\n  const [user, setUser] = useState(null);\n\n  const match = useMatch(\"/notes/:id\");\n\n  const note = match\n    ? notes.find((note) => note.id === Number(match.params.id))\n    : null;\n\n  const login = (user) => {\n    setUser(user);\n  };\n\n  const padding = {\n    padding: 5,\n  };\n\n  return (\n    <div>\n      <div>\n        <Link style={padding} to=\"/\">\n          home\n        </Link>\n        <Link style={padding} to=\"/notes\">\n          notes\n        </Link>\n        <Link style={padding} to=\"/users\">\n          users\n        </Link>\n        {user ? (\n          <em>{user} logged in</em>\n        ) : (\n          <Link style={padding} to=\"/login\">\n            login\n          </Link>\n        )}\n      </div>\n      <Routes>\n        <Route path=\"/notes/:id\" element={<Note note={note} />} />\n        <Route path=\"/notes\" element={<Notes notes={notes} />} />\n        <Route\n          path=\"/users\"\n          element={user ? <Users /> : <Navigate replace to=\"/login\" />}\n        />\n        <Route path=\"/login\" element={<Login onLogin={login} />} />\n        <Route path=\"/\" element={<Home />} />\n      </Routes>\n      <div>\n        <br />\n        <em>Note app, Department of Computer Science 2022</em>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <Router>\n    <App />\n  </Router>\n);\n","/Users/alex/full-stack-open/demos/router-app/src/App.js",["15"],[],{"ruleId":"16","severity":1,"message":"17","line":10,"column":3,"nodeType":"18","messageId":"19","endLine":10,"endColumn":12},{"ruleId":"16","severity":1,"message":"20","line":94,"column":17,"nodeType":"18","messageId":"19","endLine":94,"endColumn":25},{"ruleId":"21","severity":2,"message":"22","line":1,"column":16,"nodeType":"18","messageId":"23","endLine":1,"endColumn":19},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'setNotes' is assigned a value but never used.","no-undef","'App' is not defined.","undef"]