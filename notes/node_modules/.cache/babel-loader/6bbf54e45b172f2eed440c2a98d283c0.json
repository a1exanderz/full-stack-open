{"ast":null,"code":"var _jsxFileName = \"/Users/alex/full-stack-open/demos/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: footerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n      children: \"Note app, Department of Computer Science, University of Helsinki 2022\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Footer;\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState();\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  const Notification = _ref => {\n    let {\n      message\n    } = _ref;\n    if (!message) {\n      return;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  };\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = {\n      ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(n => n.id !== id ? n : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n  const addNote = event => {\n    if (!newNote) return;\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? \"important\" : \"all\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"98PSbNpMHwLEF5ZGP8u0YZSj2j4=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Footer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","Note","noteService","Footer","footerStyle","color","fontStyle","fontSize","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","getAll","then","initialNotes","Notification","message","toggleImportanceOf","id","note","find","n","changedNote","important","update","returnedNote","map","catch","error","content","setTimeout","filter","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","create","concat","handleNoteChange","target","value","notesToShow"],"sources":["/Users/alex/full-stack-open/demos/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2022\n      </em>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState();\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const Notification = ({ message }) => {\n    if (!message) {\n      return;\n    }\n    return <div className=\"error\">{message}</div>;\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((n) => (n.id !== id ? n : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const addNote = (event) => {\n    if (!newNote) return;\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">Save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}